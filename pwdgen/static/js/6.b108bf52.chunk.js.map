{"version":3,"sources":["PasswordGenerator.tsx","utils/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["PersonalDetails","lazy","PasswordPreferences","PasswordGenerator","props","useState","step","setStep","password","setPassword","className","length","onClick","ele","selectText","target","window","getSelection","selection","range","document","createRange","selectNodeContents","removeAllRanges","addRange","copyToClipBoard","textarea","createElement","innerText","body","appendChild","select","execCommand","remove","dashCaseToTitleCase","field_name","toLowerCase","split","map","text","charAt","toUpperCase","slice","join","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError"],"mappings":"0IAGMA,EAAkBC,gBAAK,kBAAM,iCAC7BC,EAAsBD,gBAAK,kBAAM,uDAgCxBE,UA9BW,SAACC,GAAgB,IAAD,EAChBC,mBAAiB,GADD,mBACjCC,EADiC,KAC3BC,EAD2B,OAERF,mBAAiB,IAFT,mBAEjCG,EAFiC,KAEvBC,EAFuB,KAMxC,OACE,sBAAKC,UAAU,YAAf,UAEW,IAATJ,EACI,cAACJ,EAAD,CAAqBO,YAAaA,IAClC,cAACT,EAAD,CAAiBO,QAASA,IAG9BC,GAAYA,EAASG,OAEf,sBAAKD,UAAU,gBAAf,UACE,qBACEA,UAAU,gBACVE,QAfU,SAACC,GAAD,OAAcC,YAAWD,EAAIE,SAazC,SAGEP,IACF,qBAAKE,UAAU,gBAAf,2EAGJ,U,gCC9BV,0GAAMI,EAAa,SAACD,GAClB,GAAIG,OAAOC,aAAc,CACvB,IAAMC,EAAiBF,OAAOC,eACxBE,EAAaC,SAASC,cAC5BF,EAAMG,mBAAmBT,GACzBK,EAAUK,kBACVL,EAAUM,SAASL,KAIjBM,EAAkB,SAACjB,GACvB,IAAMkB,EAAWN,SAASO,cAAc,YACxCD,EAASE,UAAYpB,EACrBY,SAASS,KAAKC,YAAYJ,GAC1BA,EAASK,SACTX,SAASY,YAAY,QACrBN,EAASO,UAGLC,EAAsB,SAACC,GAC3B,OAAOA,EACJC,cACAC,MAAM,SACNC,KAAI,SAACC,GAAD,OAAUA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MACxDC,KAAK,O,gCCxBV,8CACe,SAASC,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGH,MAAM,GAAI,GAEpD,MADU,WAANK,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBO,MAAMC,KAAKV,GACxC,cAANE,GAAqB,2CAA2CS,KAAKT,GAAW,YAAiBF,EAAGC,QAAxG,K,gCCPa,SAASW,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAI/C,UAAQgD,EAAMD,EAAI/C,QAE/C,IAAK,IAAIiD,EAAI,EAAGC,EAAO,IAAIP,MAAMK,GAAMC,EAAID,EAAKC,IAC9CC,EAAKD,GAAKF,EAAIE,GAGhB,OAAOC,EAPT,mC,8ECIe,SAASC,EAAeJ,EAAKE,GAC1C,OCLa,SAAyBF,GACtC,GAAIJ,MAAMS,QAAQL,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKE,GACjD,GAAsB,qBAAXI,QAA4BA,OAAOC,YAAYjB,OAAOU,GAAjE,CACA,IAAIQ,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKd,EAAIM,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKvD,SAAWiD,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBR,EAAKE,IAAM,OAAAkB,EAAA,GAA2BpB,EAAKE,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/6.b108bf52.chunk.js","sourcesContent":["import React, { useState, lazy } from 'react';\n\nimport { selectText } from './utils';\nconst PersonalDetails = lazy(() => import('./PersonalDetails'));\nconst PasswordPreferences = lazy(() => import('./PasswordPreferences'));\n\nconst PasswordGenerator = (props: any) => {\n  const [step, setStep] = useState<number>(1)\n  const [password, setPassword] = useState<string>('');\n  \n  const onPasswordClick = (ele: any) => selectText(ele.target)\n\n  return (\n    <div className=\"container\">\n    {\n      step !== 0\n        ? <PasswordPreferences setPassword={setPassword} />\n        : <PersonalDetails setStep={setStep} />\n    }\n    {\n      password && password.length\n        ? (\n            <div className=\"password-area\">\n              <div\n                className=\"password-text\"\n                onClick={onPasswordClick}\n              >{password}</div>\n              <div className=\"password-help\">Your password is copied to clipboard use ctrl + v to paste</div>\n            </div>\n          )\n        : null\n    }\n    </div>\n  )\n}\n\nexport default PasswordGenerator;","const selectText = (ele: any) => {\n  if (window.getSelection) {\n    const selection: any = window.getSelection();\n    const range: any = document.createRange();\n    range.selectNodeContents(ele);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nconst copyToClipBoard = (password: string) => {\n  const textarea = document.createElement(\"textarea\");\n  textarea.innerText = password;\n  document.body.appendChild(textarea);\n  textarea.select();\n  document.execCommand(\"copy\");\n  textarea.remove();\n}\n\nconst dashCaseToTitleCase = (field_name: string) => {\n  return field_name\n    .toLowerCase()\n    .split(/[-_]/g)\n    .map((text) => text.charAt(0).toUpperCase() + text.slice(1))\n    .join(\" \");\n};\n\nexport {\n  selectText,\n  copyToClipBoard,\n  dashCaseToTitleCase\n}\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}